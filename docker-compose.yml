version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - ./db:/var/lib/postgresql/data
    env_file:
      - .env
  api:
    restart: always
    build:
      context: api
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./api:/code
      - ./media:/media
    depends_on:
      - db
    env_file:
      - .env
    labels:
      - traefik.http.routers.api.rule=Host(`${API_HOST}`)
      - traefik.http.services.api.loadbalancer.server.port=8000
  pwa:
    restart: always
    build:
      context: pwa
      dockerfile: Dockerfile
    command: npm run dev
    volumes:
      - ./pwa:/code
      - /code/node_modules
      - /code/.nuxt
    env_file:
      - .env
    labels:
      - traefik.http.routers.pwa.rule=Host(`${FRONTEND_HOST}`)
      - traefik.http.services.pwa.loadbalancer.server.port=3000
    
  traefik:
    image: traefik:v2.2
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.insecure=true
      - --providers.docker
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro